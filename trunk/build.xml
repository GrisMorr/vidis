<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project basedir="." default="build" name="Vidis">
	<taskdef resource="net/sf/antcontrib/antcontrib.properties">
	  <classpath>
	    <pathelement location="./lib/ant/ant-contrib-1.0b3.jar"/>
	  </classpath>
	</taskdef>
	<!-- determine os family (unix, mac, solaris, windows, ..) -->
	<condition property="isMac" else="false">
		<and>
			<os family="mac"/>
			<not>
				<os family="unix"/>
			</not>
		</and>
	</condition>
	<condition property="isUnix" else="false">
		<and>
			<os family="unix" />
		</and>
	</condition>
	<condition property="isSolaris" else="false">
		<!-- TODO: don't know if this is working! -->
		<and>
			<os family="os/2" />
		</and>
	</condition>
	<condition property="isWindows" else="false">
		<or>
			<os family="windows" />
			<os family="win9x" />
		</or>
	</condition>
	<!-- determine architecture (x86, ppc, universal, sparc, sparcv9 -->
	<condition property="isAMD64" else="false">
		<and>
			<os arch="amd64" />
		</and>
	</condition>
	<condition property="isX86" else="false">
		<and>
			<or>
				<os arch="x86" />
				<os arch="i386" />
				<os arch="i486" />
				<os arch="i586" />
				<os arch="i686" />
			</or>
		</and>
	</condition>
	<condition property="isPPC" else="false">
		<and>
			<os arch="ppc" />
		</and>
	</condition>
	<condition property="isUNIVERSAL" else="false">
		<and>
			<os arch="universal" />
		</and>
	</condition>
	<condition property="isSPARC" else="false">
		<and>
			<os arch="sparc" />
		</and>
	</condition>
	<condition property="isSPARCV9" else="false">
		<and>
			<os arch="sparcv9" />
		</and>
	</condition>
	
	<if>
		<equals arg1="${isWindows}" arg2="true" />
		<then>
			<property name="path-spacer" value="\" />
		</then>
		<elseif>
			<equals arg1="${isUnix}" arg2="true" />
			<then>
				<property name="path-spacer" value="/" />
			</then>
		</elseif>
		<elseif>
			<equals arg1="${isSolaris}" arg2="true" />
			<then>
				<property name="path-spacer" value="/" />
			</then>
		</elseif>
		<elseif>
			<equals arg1="${isMac}" arg2="true" />
			<then>
				<property name="path-spacer" value="/" />
			</then>
		</elseif>
		<else>
			<property name="path-spacer" value="/" />
		</else>
	</if>
	
	<echo message="Running '${os.name}' on '${os.arch}' with pathspacer '${path-spacer}'" />
	<echo message="win: ${isWindows}, mac: ${isMac}, solaris: ${isSolaris}, unix: ${isUnix}" />
	<echo message="amd64: ${isAMD64}, x86: ${isX86}, ppc: ${isPPC}, sparc: ${isSPARC}, universal: ${isUNIVERSAL}, sparcV9: ${isSPARCV9}" />
	
	<!-- load the correct native libraries for jogl -->
	<property name="jogl-path" value="lib${path-spacer}jogl" />
	<property name="jogl-version" value="1.1.1-pre-20080304" />
	<if>
		<equals arg1="${isWindows}" arg2="true" />
		<then>
			<!-- running on windows -->
			<if>
				<equals arg1="${isX86}" arg2="true" />
				<then>
					<!-- arch: x86 -->
					<property name="jogl-libpath" value="${jogl-path}${path-spacer}${jogl-version}${path-spacer}windows-i586" />
				</then>
				<elseif>
					<equals arg1="${isAMD64}" arg2="true" />
					<then>
						<!-- arch: amd64 -->
						<property name="jogl-libpath" value="${jogl-path}${path-spacer}${jogl-version}${path-spacer}windows-amd64" />
					</then>
				</elseif>
				<else>
					<echo message="Unsupported arch ${os.arch} for OS ${os.name}" />
				</else>
			</if>
		</then>
		<elseif>
			<equals arg1="${isMac}" arg2="true" />
			<then>
				<!-- running on mac -->
				<if>
					<equals arg1="${isUNIVERSAL}" arg2="true" />
					<then>
						<!-- arch: x86 -->
						<property name="jogl-libpath" value="${jogl-path}${path-spacer}${jogl-version}${path-spacer}macosx-universal" />
					</then>
					<elseif>
						<equals arg1="${isPPC}" arg2="true" />
						<then>
							<!-- arch: amd64 -->
							<property name="jogl-libpath" value="${jogl-path}${path-spacer}${jogl-version}${path-spacer}macosx-ppc" />
						</then>
					</elseif>
					<else>
						<echo message="Unsupported arch ${os.arch} for OS ${os.name}" />
					</else>
				</if>
			</then>
		</elseif>
		<elseif>
			<equals arg1="${isUnix}" arg2="true" />
			<then>
				<!-- running on unix -->
				<if>
					<equals arg1="${isX86}" arg2="true" />
					<then>
						<!-- arch: x86 -->
						<property name="jogl-libpath" value="${jogl-path}${path-spacer}${jogl-version}${path-spacer}linux-i586" />
					</then>
					<elseif>
						<equals arg1="${isAMD64}" arg2="true" />
						<then>
							<!-- arch: amd64 -->
							<property name="jogl-libpath" value="${jogl-path}${path-spacer}${jogl-version}${path-spacer}linux-amd64" />
						</then>
					</elseif>
					<else>
						<echo message="Unsupported arch ${os.arch} for OS ${os.name}" />
					</else>
				</if>
			</then>
		</elseif>
		<elseif>
			<equals arg1="${isSolaris}" arg2="true" />
			<then>
				<!-- running on solaris -->
				<if>
					<equals arg1="${isX86}" arg2="true" />
					<then>
						<!-- arch: x86 -->
						<property name="jogl-libpath" value="${jogl-path}${path-spacer}${jogl-version}${path-spacer}solaris-i586" />
					</then>
					<elseif>
						<equals arg1="${isAMD64}" arg2="true" />
						<then>
							<!-- arch: amd64 -->
							<property name="jogl-libpath" value="${jogl-path}${path-spacer}${jogl-version}${path-spacer}solaris-amd64" />
						</then>
					</elseif>
					<elseif>
						<equals arg1="${isSPARC}" arg2="true" />
						<then>
							<!-- arch: sparc -->
							<property name="jogl-libpath" value="${jogl-path}${path-spacer}${jogl-version}${path-spacer}solaris-sparc" />
						</then>
					</elseif>
					<elseif>
						<equals arg1="${isSPARCV9}" arg2="true" />
						<then>
							<!-- arch: sparc -->
							<property name="jogl-libpath" value="${jogl-path}${path-spacer}${jogl-version}${path-spacer}solaris-sparcv9" />
						</then>
					</elseif>
					<else>
						<echo message="Unsupported arch ${os.arch} for OS ${os.name}" />
					</else>
				</if>
			</then>
		</elseif>
		<else>
			<echo message="Unsupported OS: ${os.name}" />
		</else>
	</if>
	
	<echo message="Using jogl-libpath: ${jogl-libpath}" />
	
	<property environment="env"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.5"/>
    <property name="source" value="1.5"/>
    <path id="vidis.classpath">
        <pathelement location="bin"/>
        <pathelement location="${jogl-path}/${jogl-version}/gluegen-rt.jar"/>
        <pathelement location="${jogl-path}/${jogl-version}/jogl.jar"/>
    </path>
	<!-- target init -->
    <target name="init">
        <mkdir dir="bin"/>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="src" excludes="**/*.launch, **/*.java"/>
        </copy>
    </target>
	<!-- target clean -->
    <target name="clean">
        <delete dir="bin"/>
    </target>
	<!-- target cleanall -->
    <target depends="clean" name="cleanall"/>
	<!-- target build -->
    <target depends="build-subprojects,build-project" name="build"/>
	<!-- target build-subprojects -->
    <target name="build-subprojects"/>
	<!-- target build-project -->
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin" source="${source}" target="${target}">
            <src path="src"/>
            <classpath refid="vidis.classpath"/>
        </javac>
    </target>
	<!-- target build-refprojects -->
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>
	<!-- target launch-app -->
	<target description="startet VM und Vidis" name="launch" depends="build">
		<java 	classname="vidis.run.Main"
				fork="true">
			<classpath refid="vidis.classpath" />
			<jvmarg value="-Djava.library.path=${jogl-libpath}" />
		</java>
	</target>
	<!-- target launch-vis -->
	<target description="startet VM und Vidis JOGL" name="launchvis" depends="build">
		<java 	classname="vidis.vis.RunScene"
				fork="true">
			<classpath refid="vidis.classpath" />
			<jvmarg value="-Djava.library.path=${jogl-libpath}" />
		</java>
	</target>
</project>
