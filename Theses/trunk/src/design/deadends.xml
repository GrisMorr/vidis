<?xml version="1.0" encoding="UTF-8"?>
<section
	xmlns="http://docbook.org/ns/docbook">
	<title>Dead Ends</title>
	<para>Im folgenden werden verfolgte, aber dann doch aufgegebene Ansätze vorgestellt.</para>
	
	<section xml:id="section_deadends_java3d">
		<title><trademark>Java3D</trademark></title>
		<para>
			Ein Prototyp wurde in <trademark>Java3D</trademark> entworfen. Nach mehreren Tests mit Profiling Tools wie eclipse TPTP oder dem 
			NetBeans Profiler musste dieser Prototyp aufgrund von Performance Problemen aufgegeben werden.
		
			<figure xml:id="fig_profiling_charts">
				<title>Profiling Screenshots</title>
				<mediaobject>
					<imageobject>
						<imagedata fileref="screenshot of profiling results.needed" />
					</imageobject>
				</mediaobject>
			</figure>
			
			Wie in <xref linkend="fig_profiling_charts" /> zu sehen ist, verbraucht <trademark>Java3D</trademark> nach kürzester Zeit den gesamten Heap
			Space mit Instanzen von <classname>Vector3d</classname>. 
		</para>
	</section>
	<section>
		<title><trademark>Java</trademark> Swing</title>
		<para>
			Derselbe Prototyp basierte auf einem Swing GUI, mit einem <trademark class="registered">OpenGL</trademark> Panel. Die Steuerelemente waren um
			das 3D Panel angeordnet.
		</para>
		
		<figure xml:id="fig_swingscreenshot">
			<title>Screenshot vom Swing Prototyp</title>
			<screenshot>
				<mediaobject>
					<imageobject>
						<imagedata width="80%" align="center" fileref="figures/v3_screenshot.jpg"/>
					</imageobject>
				</mediaobject>
			</screenshot>
		</figure>

		<para>
			Allerdings gab es Kompatibilitätsprobleme zwischen SWING und
			OpenGL, sodass das 3D Panel immer im Vordergrund stand. Außerdem
			war es nicht möglich dies durch Transparenzeffekte auszugleichen.
			Weiters passte die Swing Oberfläche auch optisch und stilistisch
			nicht zur 3D Umgebung von VIDIS. Den wichtigsten Grund
			diesen Prototyp zu verwerfen gaben uns schlussendlich unkontrollierte
			Verhaltensweisen. VIDIS stürzte gelegentlich aus nicht nachvollziehbaren
			Gründen ab. Nach einiger Zeit, in der wir versucht haben das Problem mit Hilfe von
			Stacktraces und Debugtraces zu lokalisieren und dies keine Früchte trug,
			haben wir beschlossen VIDIS neu zu schreiben und die grafische Benutzeroberfläche
			nicht mit Swing zu realisieren.
		</para>
	</section>	
</section>
