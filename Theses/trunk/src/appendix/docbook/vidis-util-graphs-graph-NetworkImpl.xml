<?xml version='1.0' encoding='UTF-8'?>

<refentry version="1.0" xml:id="CLASS-248" xmlns="http://docbook.org/ns/docbook" xmlns:xl="http://www.w3.org/1999/xlink" xreflabel="vidis.util.graphs.graph.NetworkImpl">
  <indexterm><primary>Classes</primary><secondary>NetworkImpl</secondary></indexterm>
  <indexterm><primary>NetworkImpl</primary></indexterm>
  <refentryinfo>
    <date>2008-12-16</date>
  </refentryinfo>
  <refmeta>
    <manvolnum>3</manvolnum>
    <refmiscinfo class="source">vidis.util.graphs.graph.NetworkImpl</refmiscinfo>
    <refmiscinfo class="version">1.0</refmiscinfo>
    <refmiscinfo class="manual">dbdoclet reference handbook</refmiscinfo>
  </refmeta>
  <refnamediv>
    <refname>Class NetworkImpl</refname>
    <refpurpose>This class implements the <literal>Network</literal> interface as a directed, weighted graph with a source and a sink vertex.</refpurpose>
  </refnamediv>
  <refsynopsisdiv><classsynopsis class="class" language="java">
      <ooclass>
        <modifier>public</modifier>
        <modifier>class</modifier>
        <classname>NetworkImpl</classname>
      </ooclass>
      <ooclass>
        <classname>WeightedGraphImpl</classname>
      </ooclass>
      <oointerface>
        <interfacename>Network</interfacename>
      </oointerface>
      <classsynopsisinfo role="comment">// Public Constructors</classsynopsisinfo>
      <constructorsynopsis language="java">
        <modifier>public</modifier>
        <methodname>NetworkImpl</methodname>
        <void/>
      </constructorsynopsis>
      <classsynopsisinfo role="comment">// Public Methods</classsynopsisinfo>
      <methodsynopsis language="java">
        <modifier>public</modifier>
        <type>WeightedEdge</type>
        <methodname>addEdge</methodname>
        <methodparam><type>Vertex</type><parameter>v1</parameter></methodparam>
        <methodparam><type>Vertex</type><parameter>v2</parameter></methodparam>
        <methodparam><type>double</type><parameter>capacity</parameter></methodparam>
        <exceptionname>Exception</exceptionname>
      </methodsynopsis>
      <methodsynopsis language="java">
        <modifier>public</modifier>
        <type>Vertex</type>
        <methodname>getSink</methodname>
        <void/>
      </methodsynopsis>
      <methodsynopsis language="java">
        <modifier>public</modifier>
        <type>Vertex</type>
        <methodname>getSource</methodname>
        <void/>
      </methodsynopsis>
      <methodsynopsis language="java">
        <modifier>public</modifier>
        <type>void</type>
        <methodname>setSink</methodname>
        <methodparam><type>Vertex</type><parameter>sinkVertex</parameter></methodparam>
        <exceptionname>GraphException</exceptionname>
      </methodsynopsis>
      <methodsynopsis language="java">
        <modifier>public</modifier>
        <type>void</type>
        <methodname>setSource</methodname>
        <methodparam><type>Vertex</type><parameter>sourceVertex</parameter></methodparam>
        <exceptionname>GraphException</exceptionname>
      </methodsynopsis>
    </classsynopsis>
<para><emphasis role="bold">Methods inherited from vidis.util.graphs.graph.WeightedGraphImpl</emphasis>: <simplelist type="inline"><member><link linkend="METHOD-257-2"><literal>addEdge</literal></link></member><member><link linkend="METHOD-257-1"><literal>createEdge</literal></link></member><member><link linkend="METHOD-257-3"><literal>getClosest</literal></link></member></simplelist></para><para><emphasis role="bold">Methods inherited from vidis.util.graphs.graph.GraphImpl</emphasis>: <simplelist type="inline"><member><link linkend="METHOD-243-6"><literal>add</literal></link></member><member><link linkend="METHOD-243-3"><literal>cloneVertices</literal></link></member><member><link linkend="METHOD-243-20"><literal>getAdjacentVertices</literal></link></member><member><link linkend="METHOD-243-5"><literal>getAllEdges</literal></link></member><member><link linkend="METHOD-243-21"><literal>getDegree</literal></link></member><member><link linkend="METHOD-243-4"><literal>getEdges</literal></link></member><member><link linkend="METHOD-243-17"><literal>getIncomingAdjacentVertices</literal></link></member><member><link linkend="METHOD-243-18"><literal>getOutgoingAdjacentVertices</literal></link></member><member><link linkend="METHOD-243-14"><literal>getVertices</literal></link></member><member><link linkend="METHOD-243-13"><literal>getVerticesCount</literal></link></member><member><link linkend="METHOD-243-2"><literal>getVerticesIterator</literal></link></member><member><link linkend="METHOD-243-7"><literal>haveCommonEdge</literal></link></member><member><link linkend="METHOD-243-1"><literal>isDirected</literal></link></member><member><link linkend="METHOD-243-24"><literal>isPath</literal></link></member><member><link linkend="CLASS-243"><literal>remove</literal></link></member><member><link linkend="METHOD-243-11"><literal>removeEdge</literal></link></member><member><link linkend="METHOD-243-12"><literal>removeEdges</literal></link></member><member><link linkend="METHOD-243-23"><literal>toString</literal></link></member></simplelist></para><para><emphasis role="bold">Methods inherited from java.lang.Object</emphasis>: <simplelist type="inline"><member><varname>equals</varname></member><member><varname>getClass</varname></member><member><varname>hashCode</varname></member><member><varname>notify</varname></member><member><varname>notifyAll</varname></member><member><varname>wait</varname></member></simplelist></para></refsynopsisdiv>
  <refsect1>
    <title>Inheritance Path</title>
    <informalfigure>
      <mediaobject>
        <imageobject>
          <imagedata align="center" fileref="figures/vidis/util/graphs/graph/NetworkImpl/ClassDiagram.png" format="PNG"/>
        </imageobject>
      </mediaobject>
    </informalfigure>
  </refsect1>
  <refsect1>
    <title>Description</title>
    <para>This class implements the <literal>Network</literal> interface as a directed, weighted graph with a source and a sink vertex.</para>
  </refsect1>
  <refsect1>
    <title>Constructors</title>
    <refsect2 xml:id="CONSTRUCTOR-248-1" xreflabel="NetworkImpl()">
      <title>NetworkImpl()</title>
      <indexterm><primary>NetworkImpl</primary></indexterm>
      <indexterm><primary>Methods</primary><secondary>NetworkImpl</secondary></indexterm>
      <constructorsynopsis language="java">
        <modifier>public</modifier>
        <methodname>NetworkImpl</methodname>
        <void/>
      </constructorsynopsis>
      <para>Constructor for instances of the <literal>NetworkImpl</literal> class.</para>
    </refsect2>
  </refsect1>
  <refsect1>
    <title>Methods</title>
    <refsect2 xml:id="METHOD-248-5" xreflabel="addEdge(vidis.util.graphs.graph.Vertex, vidis.util.graphs.graph.Vertex, double)">
      <title>addEdge(Vertex, Vertex, double)</title>
      <indexterm><primary>addEdge</primary></indexterm>
      <indexterm><primary>Methods</primary><secondary>addEdge</secondary></indexterm>
      <methodsynopsis language="java">
        <modifier>public</modifier>
        <type>WeightedEdge</type>
        <methodname>addEdge</methodname>
        <methodparam><type>Vertex</type><parameter>v1</parameter></methodparam>
        <methodparam><type>Vertex</type><parameter>v2</parameter></methodparam>
        <methodparam><type>double</type><parameter>capacity</parameter></methodparam>
        <exceptionname>Exception</exceptionname>
      </methodsynopsis>
      <para><emphasis role="bold">Specified by: </emphasis>Method <link linkend="METHOD-246-5">addEdge</link> in interface <link linkend="CLASS-246">Network</link></para>
      <para>Convenience method to add a WeightedEdge with a specified (non-negative) network capacity into the <literal>WeightedGraph</literal>. The default addEdge( v1, v2 ) will add a WeightedEdge with zero capacity, after which you can call setWeight() to specify the capacity.</para>
    </refsect2>
    <refsect2 xml:id="METHOD-248-4" xreflabel="getSink()">
      <title>getSink()</title>
      <indexterm><primary>getSink</primary></indexterm>
      <indexterm><primary>Methods</primary><secondary>getSink</secondary></indexterm>
      <methodsynopsis language="java">
        <modifier>public</modifier>
        <type>Vertex</type>
        <methodname>getSink</methodname>
        <void/>
      </methodsynopsis>
      <para><emphasis role="bold">Specified by: </emphasis>Method <link linkend="METHOD-246-4">getSink</link> in interface <link linkend="CLASS-246">Network</link></para>
      <para>Returns the current sink of the <literal>Network</literal>. It is possible that this method will return null if the <literal>Network</literal> is empty.</para>
    </refsect2>
    <refsect2 xml:id="METHOD-248-3" xreflabel="getSource()">
      <title>getSource()</title>
      <indexterm><primary>getSource</primary></indexterm>
      <indexterm><primary>Methods</primary><secondary>getSource</secondary></indexterm>
      <methodsynopsis language="java">
        <modifier>public</modifier>
        <type>Vertex</type>
        <methodname>getSource</methodname>
        <void/>
      </methodsynopsis>
      <para><emphasis role="bold">Specified by: </emphasis>Method <link linkend="METHOD-246-3">getSource</link> in interface <link linkend="CLASS-246">Network</link></para>
      <para>Returns the current source of the <literal>Network</literal>. It is possible that this method will return null if the <literal>Network</literal> is empty.</para>
    </refsect2>
    <refsect2 xml:id="METHOD-248-2" xreflabel="setSink(vidis.util.graphs.graph.Vertex)">
      <title>setSink(Vertex)</title>
      <indexterm><primary>setSink</primary></indexterm>
      <indexterm><primary>Methods</primary><secondary>setSink</secondary></indexterm>
      <methodsynopsis language="java">
        <modifier>public</modifier>
        <type>void</type>
        <methodname>setSink</methodname>
        <methodparam><type>Vertex</type><parameter>sinkVertex</parameter></methodparam>
        <exceptionname>GraphException</exceptionname>
      </methodsynopsis>
      <para><emphasis role="bold">Specified by: </emphasis>Method <link linkend="METHOD-246-2">setSink</link> in interface <link linkend="CLASS-246">Network</link></para>
      <para>Sets the sink vertex of the <literal>Network</literal>. The <literal>Vertex</literal> specified must already be in the <literal>Network</literal>. Otherwise, a <literal>NoSuchVertexException</literal> is returned.</para>
    </refsect2>
    <refsect2 xml:id="METHOD-248-1" xreflabel="setSource(vidis.util.graphs.graph.Vertex)">
      <title>setSource(Vertex)</title>
      <indexterm><primary>setSource</primary></indexterm>
      <indexterm><primary>Methods</primary><secondary>setSource</secondary></indexterm>
      <methodsynopsis language="java">
        <modifier>public</modifier>
        <type>void</type>
        <methodname>setSource</methodname>
        <methodparam><type>Vertex</type><parameter>sourceVertex</parameter></methodparam>
        <exceptionname>GraphException</exceptionname>
      </methodsynopsis>
      <para><emphasis role="bold">Specified by: </emphasis>Method <link linkend="METHOD-246-1">setSource</link> in interface <link linkend="CLASS-246">Network</link></para>
      <para>Sets the source vertex of the <literal>Network</literal>. The <literal>Vertex</literal> specified must already be in the <literal>Network</literal>. Otherwise, a <literal>NoSuchVertexException</literal> is returned.</para>
    </refsect2>
  </refsect1>
</refentry>


