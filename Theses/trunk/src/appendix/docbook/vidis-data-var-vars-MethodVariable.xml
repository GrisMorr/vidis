<?xml version='1.0' encoding='UTF-8'?>

<refentry version="1.0" xml:id="CLASS-34" xmlns="http://docbook.org/ns/docbook" xmlns:xl="http://www.w3.org/1999/xlink" xreflabel="vidis.data.var.vars.MethodVariable">
  <indexterm><primary>Classes</primary><secondary>MethodVariable</secondary></indexterm>
  <indexterm><primary>MethodVariable</primary></indexterm>
  <refentryinfo>
    <date>2008-12-16</date>
  </refentryinfo>
  <refmeta>
    <manvolnum>3</manvolnum>
    <refmiscinfo class="source">vidis.data.var.vars.MethodVariable</refmiscinfo>
    <refmiscinfo class="version">1.0</refmiscinfo>
    <refmiscinfo class="manual">dbdoclet reference handbook</refmiscinfo>
  </refmeta>
  <refnamediv>
    <refname>Class MethodVariable</refname>
    <refpurpose>a method variable; this variable uses reflection to retrieve the value, just like its little brother FieldVariable does.</refpurpose>
  </refnamediv>
  <refsynopsisdiv><classsynopsis class="class" language="java">
      <ooclass>
        <modifier>public</modifier>
        <modifier>class</modifier>
        <classname>MethodVariable</classname>
      </ooclass>
      <ooclass>
        <classname>AVariable</classname>
      </ooclass>
      <classsynopsisinfo role="comment">// Public Constructors</classsynopsisinfo>
      <constructorsynopsis language="java">
        <modifier>public</modifier>
        <methodname>MethodVariable</methodname>
        <methodparam><type>String</type><parameter>id</parameter></methodparam>
        <methodparam><type>Object</type><parameter>object</parameter></methodparam>
        <methodparam><type>Method</type><parameter>method</parameter></methodparam>
      </constructorsynopsis>
      <classsynopsisinfo role="comment">// Public Methods</classsynopsisinfo>
      <methodsynopsis language="java">
        <modifier>public</modifier>
        <type>Object</type>
        <methodname>getData</methodname>
        <void/>
      </methodsynopsis>
      <methodsynopsis language="java">
        <modifier>public</modifier>
        <type>Object</type>
        <methodname>getData</methodname>
        <methodparam><type>Object[]</type><parameter>args</parameter></methodparam>
      </methodsynopsis>
      <methodsynopsis language="java">
        <modifier>public</modifier>
        <type>Class&lt;?&gt;</type>
        <methodname>getDataType</methodname>
        <void/>
      </methodsynopsis>
      <methodsynopsis language="java">
        <modifier>public</modifier>
        <type>Class[]&lt;?&gt;</type>
        <methodname>getExpectedMethodParameterTypes</methodname>
        <void/>
      </methodsynopsis>
      <methodsynopsis language="java">
        <modifier>public</modifier>
        <type>boolean</type>
        <methodname>getMethodExpectsParameters</methodname>
        <void/>
      </methodsynopsis>
      <methodsynopsis language="java">
        <modifier>public</modifier>
        <type>Class&lt;? extends AVariable&gt;</type>
        <methodname>getVariableType</methodname>
        <void/>
      </methodsynopsis>
      <methodsynopsis language="java">
        <modifier>public</modifier>
        <type>void</type>
        <methodname>update</methodname>
        <methodparam><type>Object</type><parameter>data</parameter></methodparam>
      </methodsynopsis>
      <methodsynopsis language="java">
        <modifier>public</modifier>
        <type>void</type>
        <methodname>update</methodname>
        <methodparam><type>Object</type><parameter>obj</parameter></methodparam>
        <methodparam><type>Method</type><parameter>m</parameter></methodparam>
      </methodsynopsis>
    </classsynopsis>
<para><emphasis role="bold">Methods inherited from vidis.data.var.AVariable</emphasis>: <simplelist type="inline"><member><link linkend="CLASS-26"><literal>addVariableChangeListener</literal></link></member><member><link linkend="CLASS-26"><literal>getData</literal></link></member><member><link linkend="CLASS-26"><literal>getDataType</literal></link></member><member><link linkend="METHOD-26-1"><literal>getIdentifier</literal></link></member><member><link linkend="CLASS-26"><literal>getIdentifierWithoutNamespace</literal></link></member><member><link linkend="CLASS-26"><literal>getNameSpace</literal></link></member><member><link linkend="CLASS-26"><literal>getNamespace</literal></link></member><member><link linkend="CLASS-26"><literal>getVariableChangeListeners</literal></link></member><member><link linkend="CLASS-26"><literal>getVariableType</literal></link></member><member><link linkend="CLASS-26"><literal>removeVariableChangeListener</literal></link></member><member><link linkend="METHOD-26-2"><literal>update</literal></link></member></simplelist></para><para><emphasis role="bold">Methods inherited from java.lang.Object</emphasis>: <simplelist type="inline"><member><varname>equals</varname></member><member><varname>getClass</varname></member><member><varname>hashCode</varname></member><member><varname>notify</varname></member><member><varname>notifyAll</varname></member><member><varname>toString</varname></member><member><varname>wait</varname></member></simplelist></para></refsynopsisdiv>
  <refsect1>
    <title>Inheritance Path</title>
    <informalfigure>
      <mediaobject>
        <imageobject>
          <imagedata align="center" fileref="figures/vidis/data/var/vars/MethodVariable/ClassDiagram.png" format="PNG"/>
        </imageobject>
      </mediaobject>
    </informalfigure>
  </refsect1>
  <refsect1>
    <title>Description</title>
    <para>a method variable; this variable uses reflection to retrieve the value, just like its little brother FieldVariable does.</para>
  </refsect1>
  <refsect1>
    <title>Constructors</title>
    <refsect2 xml:id="CONSTRUCTOR-34-1" xreflabel="MethodVariable(java.lang.String, java.lang.Object, java.lang.reflect.Method)">
      <title>MethodVariable(String, Object, Method)</title>
      <indexterm><primary>MethodVariable</primary></indexterm>
      <indexterm><primary>Methods</primary><secondary>MethodVariable</secondary></indexterm>
      <constructorsynopsis language="java">
        <modifier>public</modifier>
        <methodname>MethodVariable</methodname>
        <methodparam><type>String</type><parameter>id</parameter></methodparam>
        <methodparam><type>Object</type><parameter>object</parameter></methodparam>
        <methodparam><type>Method</type><parameter>method</parameter></methodparam>
      </constructorsynopsis>
      <para>the constructor you should use</para>
    </refsect2>
  </refsect1>
  <refsect1>
    <title>Methods</title>
    <refsect2 xml:id="METHOD-34-1" xreflabel="getData()">
      <title>getData()</title>
      <indexterm><primary>getData</primary></indexterm>
      <indexterm><primary>Methods</primary><secondary>getData</secondary></indexterm>
      <methodsynopsis language="java">
        <modifier>public</modifier>
        <type>Object</type>
        <methodname>getData</methodname>
        <void/>
      </methodsynopsis>
      <para>invokes the method</para>
    </refsect2>
    <refsect2 xml:id="METHOD-34-3" xreflabel="getExpectedMethodParameterTypes()">
      <title>getExpectedMethodParameterTypes()</title>
      <indexterm><primary>getExpectedMethodParameterTypes</primary></indexterm>
      <indexterm><primary>Methods</primary><secondary>getExpectedMethodParameterTypes</secondary></indexterm>
      <methodsynopsis language="java">
        <modifier>public</modifier>
        <type>Class[]&lt;?&gt;</type>
        <methodname>getExpectedMethodParameterTypes</methodname>
        <void/>
      </methodsynopsis>
      <para>retrieve the expected parameter class types of the method</para>
    </refsect2>
    <refsect2 xml:id="METHOD-34-2" xreflabel="getMethodExpectsParameters()">
      <title>getMethodExpectsParameters()</title>
      <indexterm><primary>getMethodExpectsParameters</primary></indexterm>
      <indexterm><primary>Methods</primary><secondary>getMethodExpectsParameters</secondary></indexterm>
      <methodsynopsis language="java">
        <modifier>public</modifier>
        <type>boolean</type>
        <methodname>getMethodExpectsParameters</methodname>
        <void/>
      </methodsynopsis>
      <para>this method retrieves if this method expects parameters</para>
    </refsect2>
  </refsect1>
</refentry>


