<?xml version='1.0' encoding='UTF-8'?>

<refentry version="1.0" xml:id="CLASS-70" xmlns="http://docbook.org/ns/docbook" xmlns:xl="http://www.w3.org/1999/xlink" xreflabel="vidis.modules.vartest.VarTestNode">
  <indexterm><primary>Classes</primary><secondary>VarTestNode</secondary></indexterm>
  <indexterm><primary>VarTestNode</primary></indexterm>
  <refentryinfo>
    <date>2008-12-16</date>
  </refentryinfo>
  <refmeta>
    <manvolnum>3</manvolnum>
    <refmiscinfo class="source">vidis.modules.vartest.VarTestNode</refmiscinfo>
    <refmiscinfo class="version">1.0</refmiscinfo>
    <refmiscinfo class="manual">dbdoclet reference handbook</refmiscinfo>
  </refmeta>
  <refnamediv>
    <refname>Class VarTestNode</refname>
    <refpurpose>Node zum Variablen und Annotations testen</refpurpose>
  </refnamediv>
  <refsynopsisdiv><classsynopsis class="class" language="java">
      <ooclass>
        <modifier>public</modifier>
        <modifier>class</modifier>
        <classname>VarTestNode</classname>
      </ooclass>
      <ooclass>
        <classname>AUserNode</classname>
      </ooclass>
      <classsynopsisinfo role="comment">// Public Fields</classsynopsisinfo>
      <fieldsynopsis language="java">
        <modifier>public</modifier>
        <type>String</type>
        <varname>header1</varname>
      </fieldsynopsis>
      <fieldsynopsis language="java">
        <modifier>public</modifier>
        <type>int</type>
        <varname>integerExecuteCount</varname>
      </fieldsynopsis>
      <classsynopsisinfo role="comment">// Public Constructors</classsynopsisinfo>
      <constructorsynopsis language="java">
        <modifier>public</modifier>
        <methodname>VarTestNode</methodname>
        <void/>
      </constructorsynopsis>
      <classsynopsisinfo role="comment">// Public Methods</classsynopsisinfo>
      <methodsynopsis language="java">
        <modifier>public</modifier>
        <type>byte</type>
        <methodname>byteExecuteCount</methodname>
        <void/>
      </methodsynopsis>
      <methodsynopsis language="java">
        <modifier>public</modifier>
        <type>double</type>
        <methodname>doubleExecuteCount</methodname>
        <void/>
      </methodsynopsis>
      <methodsynopsis language="java">
        <modifier>public</modifier>
        <type>void</type>
        <methodname>execute</methodname>
        <void/>
      </methodsynopsis>
      <methodsynopsis language="java">
        <modifier>public</modifier>
        <type>float</type>
        <methodname>floatExecuteCount</methodname>
        <void/>
      </methodsynopsis>
      <methodsynopsis language="java">
        <modifier>public</modifier>
        <type>ColorType</type>
        <methodname>getColor</methodname>
        <void/>
      </methodsynopsis>
      <methodsynopsis language="java">
        <modifier>public</modifier>
        <type>String</type>
        <methodname>getHeader2</methodname>
        <void/>
      </methodsynopsis>
      <methodsynopsis language="java">
        <modifier>public</modifier>
        <type>int</type>
        <methodname>getIntegerExecuteCount</methodname>
        <void/>
      </methodsynopsis>
      <methodsynopsis language="java">
        <modifier>public</modifier>
        <type>String</type>
        <methodname>getName</methodname>
        <void/>
      </methodsynopsis>
      <methodsynopsis language="java">
        <modifier>public</modifier>
        <type>List&lt;Integer&gt;</type>
        <methodname>getSomeList</methodname>
        <void/>
      </methodsynopsis>
      <methodsynopsis language="java">
        <modifier>public</modifier>
        <type>String</type>
        <methodname>getStringExecuteCount</methodname>
        <void/>
      </methodsynopsis>
      <methodsynopsis language="java">
        <modifier>public</modifier>
        <type>void</type>
        <methodname>init</methodname>
        <void/>
      </methodsynopsis>
      <methodsynopsis language="java">
        <modifier>public</modifier>
        <type>long</type>
        <methodname>longExecuteCount</methodname>
        <void/>
      </methodsynopsis>
      <methodsynopsis language="java">
        <modifier>public</modifier>
        <type>void</type>
        <methodname>myConnect</methodname>
        <methodparam><type>IUserNode</type><parameter>n</parameter></methodparam>
      </methodsynopsis>
      <methodsynopsis language="java">
        <modifier>public</modifier>
        <type>void</type>
        <methodname>myDisconnect</methodname>
        <void/>
      </methodsynopsis>
      <methodsynopsis language="java">
        <modifier>public</modifier>
        <type>void</type>
        <methodname>myDisconnect</methodname>
        <methodparam><type>IUserNode</type><parameter>o</parameter></methodparam>
      </methodsynopsis>
      <methodsynopsis language="java">
        <modifier>public</modifier>
        <type>void</type>
        <methodname>mySpawn</methodname>
        <void/>
      </methodsynopsis>
      <methodsynopsis language="java">
        <modifier>public</modifier>
        <type>void</type>
        <methodname>receive</methodname>
        <methodparam><type>IUserPacket</type><parameter>packet</parameter></methodparam>
      </methodsynopsis>
      <methodsynopsis language="java">
        <modifier>public</modifier>
        <type>void</type>
        <methodname>reset</methodname>
        <void/>
      </methodsynopsis>
    </classsynopsis>
<para><emphasis role="bold">Methods inherited from vidis.data.AUserNode</emphasis>: <simplelist type="inline"><member><link linkend="CLASS-2"><literal>connect</literal></link></member><member><link linkend="CLASS-2"><literal>disconnect</literal></link></member><member><link linkend="CLASS-2"><literal>getVariable</literal></link></member><member><link linkend="CLASS-2"><literal>hasVariable</literal></link></member><member><link linkend="CLASS-2"><literal>init</literal></link></member><member><link linkend="CLASS-2"><literal>interrupt</literal></link></member><member><link linkend="CLASS-2"><literal>sleep</literal></link></member><member><link linkend="CLASS-2"><literal>spawnNewNode</literal></link></member><member><link linkend="CLASS-2"><literal>toString</literal></link></member></simplelist></para><para><emphasis role="bold">Methods inherited from java.lang.Object</emphasis>: <simplelist type="inline"><member><varname>equals</varname></member><member><varname>getClass</varname></member><member><varname>hashCode</varname></member><member><varname>notify</varname></member><member><varname>notifyAll</varname></member><member><varname>wait</varname></member></simplelist></para></refsynopsisdiv>
  <refsect1>
    <title>Inheritance Path</title>
    <informalfigure>
      <mediaobject>
        <imageobject>
          <imagedata align="center" fileref="figures/vidis/modules/vartest/VarTestNode/ClassDiagram.png" format="PNG"/>
        </imageobject>
      </mediaobject>
    </informalfigure>
  </refsect1>
  <refsect1>
    <title>Description</title>
    <para>Node zum Variablen und Annotations testen</para>
  </refsect1>
</refentry>


